{"ast":null,"code":"var _jsxFileName = \"/Users/jamesyu/Desktop/School-Work/Object-Oriented-Software-Engineering/team-teamsentience/src/webpage/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    classID: \"\",\n    reviewID: \"\",\n    stars: \"\",\n    initialReview: \"\",\n    sentiment: \"\"\n  });\n  const navigate = useNavigate();\n  var jsonParse = JSON.parse(readJsonFromUrl(\"https://sis.jhu.edu/api/classes/Whiting%20School%20of%20Engineering/EN%20Computer%20Science/current?key=Iuw2pbsrh81TROyqQ7pwPRyfx7ha6XiN\")); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newRecord = { ...form\n    };\n    await fetch(\"http://localhost:1000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newRecord)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      classID: \"\",\n      reviewID: \"\",\n      stars: \"\",\n      initialReview: \"\",\n      sentiment: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reviewID\",\n          children: \"reviewID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"reviewID\",\n          value: form.reviewID,\n          onChange: console.log(jsonParse)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stars\",\n          children: \"stars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"stars\",\n          value: form.stars,\n          onChange: e => updateForm({\n            stars: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"initialReview\",\n          children: \"initialReview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"initialReview\",\n          value: form.initialReview,\n          onChange: e => updateForm({\n            initialReview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sentiment\",\n          children: \"sentiment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"sentiment\",\n          value: form.sentiment,\n          onChange: e => updateForm({\n            sentiment: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Create, \"OeGaCo1v9rQv4KP3eRAbgRDsN4M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Create","form","setForm","classID","reviewID","stars","initialReview","sentiment","navigate","jsonParse","JSON","parse","readJsonFromUrl","updateForm","value","prev","onSubmit","e","preventDefault","newRecord","fetch","method","headers","body","stringify","catch","error","window","alert","console","log","target"],"sources":["/Users/jamesyu/Desktop/School-Work/Object-Oriented-Software-Engineering/team-teamsentience/src/webpage/src/components/create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n \nexport default function Create() {\n const [form, setForm] = useState({\n  classID: \"\",\n  reviewID: \"\",\n  stars: \"\",\n  initialReview: \"\",\n  sentiment: \"\"\n });\n const navigate = useNavigate();\n var jsonParse = JSON.parse(readJsonFromUrl(\"https://sis.jhu.edu/api/classes/Whiting%20School%20of%20Engineering/EN%20Computer%20Science/current?key=Iuw2pbsrh81TROyqQ7pwPRyfx7ha6XiN\"))\n\n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newRecord = { ...form };\n \n   await fetch(\"http://localhost:1000/record/add\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newRecord),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ classID: \"\", reviewID: \"\", stars: \"\", initialReview: \"\", sentiment: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Courses</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"reviewID\">reviewID</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"reviewID\"\n           value={form.reviewID}\n           onChange={ console.log(jsonParse) }\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"stars\">stars</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"stars\"\n           value={form.stars}\n           onChange={(e) => updateForm({ stars: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"initialReview\">initialReview</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"initialReview\"\n           value={form.initialReview}\n           onChange={(e) => updateForm({ initialReview: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"sentiment\">sentiment</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"sentiment\"\n           value={form.sentiment}\n           onChange={(e) => updateForm({ sentiment: e.target.value })}\n         />\n       </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}